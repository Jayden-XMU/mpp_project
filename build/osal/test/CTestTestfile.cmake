# CMake generated Testfile for 
# Source directory: F:/mpp_debug/mpp/osal/test
# Build directory: F:/mpp_debug/mpp/build/osal/test
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(mpp_log_test "F:/mpp_debug/mpp/build/osal/test/Debug/mpp_log_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(mpp_log_test "F:/mpp_debug/mpp/build/osal/test/Release/mpp_log_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(mpp_log_test "F:/mpp_debug/mpp/build/osal/test/MinSizeRel/mpp_log_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(mpp_log_test "F:/mpp_debug/mpp/build/osal/test/RelWithDebInfo/mpp_log_test.exe")
else()
  add_test(mpp_log_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(mpp_env_test "F:/mpp_debug/mpp/build/osal/test/Debug/mpp_env_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(mpp_env_test "F:/mpp_debug/mpp/build/osal/test/Release/mpp_env_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(mpp_env_test "F:/mpp_debug/mpp/build/osal/test/MinSizeRel/mpp_env_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(mpp_env_test "F:/mpp_debug/mpp/build/osal/test/RelWithDebInfo/mpp_env_test.exe")
else()
  add_test(mpp_env_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(mpp_mem_test "F:/mpp_debug/mpp/build/osal/test/Debug/mpp_mem_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(mpp_mem_test "F:/mpp_debug/mpp/build/osal/test/Release/mpp_mem_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(mpp_mem_test "F:/mpp_debug/mpp/build/osal/test/MinSizeRel/mpp_mem_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(mpp_mem_test "F:/mpp_debug/mpp/build/osal/test/RelWithDebInfo/mpp_mem_test.exe")
else()
  add_test(mpp_mem_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(mpp_thread_test "F:/mpp_debug/mpp/build/osal/test/Debug/mpp_thread_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(mpp_thread_test "F:/mpp_debug/mpp/build/osal/test/Release/mpp_thread_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(mpp_thread_test "F:/mpp_debug/mpp/build/osal/test/MinSizeRel/mpp_thread_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(mpp_thread_test "F:/mpp_debug/mpp/build/osal/test/RelWithDebInfo/mpp_thread_test.exe")
else()
  add_test(mpp_thread_test NOT_AVAILABLE)
endif()
